{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fsbaz\\\\OneDrive\\\\Escritorio\\\\aprendiendo_react2\\\\aprendiendo_react2\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n//import './App.css';\nimport React from \"react\";\nimport { TodoCounter } from './TodoCounter';\nimport { CreateTodoButton } from './CreateTodoButton';\nimport { TodoSearch } from './TodoSearch';\nimport { TodoList } from './TodoList';\nimport { TodoItem } from './TodoItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultTodos = [{\n  text: 'Cortar Cebolla',\n  completed: true\n}, {\n  text: 'Hacer Curso De React',\n  completed: false\n}, {\n  text: 'Llorar con la Llorona',\n  completed: false\n}];\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = React.useState(defaultTodos);\n  const [searchValue, setSearchValue] = React.useState('');\n  const completedTodos = todos.filter(todo => !!todo.completed).length; //esto filtra los ToDos que ya fueron realizados\n\n  const totalTodos = todos.length;\n  let searchedTodos = [];\n\n  if (!searchValue.length >= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter(todo => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLowerCase(); //aca volvemos todo lo que escribamos en search en minuscula\n\n      return todoText.includes(searchText); //aca preguntamos si lo que escribimos en \n    });\n  }\n}\n\n_s(App, \"OGMHQXAjvuOGZdqUUooJQ35j+r8=\");\n\n_c = App;\n\nfunction completeTodo(text) {\n  const todoIndex = todos.findIndex(todo => todo.text === text); //examinamos cada todo cual indice tiene exactamente el text\n\n  const newTodos = [...todos];\n  newTodos[todoIndex].completed = true; //agarra el indice correspondiente y le cambia el completed de false a true\n\n  setTodos(newTodos);\n  /*  todos[todoIndex] = {\n     text : todos[todoIndex].text,\n     completed: true,\n   } */\n}\n\nconst deleteTodo = text => {\n  const todoIndex = todos.findIndex(todo => todo.text === text);\n  const newTodos = [...todos];\n  newTodos.splice(todoIndex, 1); //aca agarra el elemento del index elegido, y elimina 1 \n\n  setTodos(newTodos);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoCounter, {\n      total: totalTodos,\n      completed: completedTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoSearch, {\n      searchValue: searchValue,\n      setSearchValue: setSearchValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateTodoButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      children: searchedTodos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        text: todo.text,\n        completed: todo.completed,\n        onComplete: () => completeTodo(todo.text),\n        onDelete: () => deleteTodo(todo.text)\n      }, todo.text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/fsbaz/OneDrive/Escritorio/aprendiendo_react2/aprendiendo_react2/src/App.js"],"names":["React","TodoCounter","CreateTodoButton","TodoSearch","TodoList","TodoItem","defaultTodos","text","completed","App","todos","setTodos","useState","searchValue","setSearchValue","completedTodos","filter","todo","length","totalTodos","searchedTodos","todoText","toLowerCase","searchText","includes","completeTodo","todoIndex","findIndex","newTodos","deleteTodo","splice","map"],"mappings":"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","sourcesContent":["//import './App.css';\nimport React from \"react\";\nimport { TodoCounter } from './TodoCounter';\nimport { CreateTodoButton } from './CreateTodoButton';\nimport { TodoSearch } from './TodoSearch';\nimport { TodoList } from './TodoList';\nimport { TodoItem } from './TodoItem';\n\nconst defaultTodos = [\n  {\n    text: 'Cortar Cebolla',\n    completed: true\n  },\n  {\n    text: 'Hacer Curso De React',\n    completed: false\n  },\n  {\n    text: 'Llorar con la Llorona',\n    completed: false\n  }\n]\nfunction App() {\n\n  const [todos, setTodos] = React.useState(defaultTodos)\n  const [searchValue, setSearchValue] = React.useState('');\n\n  const completedTodos = todos.filter(todo => !!todo.completed).length; //esto filtra los ToDos que ya fueron realizados\n  const totalTodos = todos.length;\n\n  let searchedTodos = [];\n\n  if (!searchValue.length >= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter(todo => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLowerCase(); //aca volvemos todo lo que escribamos en search en minuscula\n      return todoText.includes(searchText); //aca preguntamos si lo que escribimos en \n      });\n  }\n  }\n\n  function completeTodo(text) {\n    const todoIndex = todos.findIndex(todo => todo.text === text); //examinamos cada todo cual indice tiene exactamente el text\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true; //agarra el indice correspondiente y le cambia el completed de false a true\n    setTodos(newTodos);\n    /*  todos[todoIndex] = {\n       text : todos[todoIndex].text,\n       completed: true,\n     } */\n  }\n\n  const deleteTodo = (text) => {\n    const todoIndex = todos.findIndex(todo => todo.text === text); \n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1); //aca agarra el elemento del index elegido, y elimina 1 \n    setTodos(newTodos);\n\n  return (\n    <React.Fragment>\n      <TodoCounter\n        total={totalTodos}\n        completed={completedTodos}\n\n      />\n\n      <TodoSearch\n        searchValue={searchValue}\n        setSearchValue={setSearchValue}\n      />\n\n      <CreateTodoButton />\n      <TodoList>\n        {searchedTodos.map(todo => (\n\n          <TodoItem\n\n            key={todo.text}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete={() => completeTodo(todo.text)}\n            onDelete={() => deleteTodo(todo.text)}\n\n          />\n        ))}\n        \n      </TodoList>\n\n\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}