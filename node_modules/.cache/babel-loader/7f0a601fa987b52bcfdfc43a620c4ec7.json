{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fsbaz\\\\OneDrive\\\\Escritorio\\\\aprendiendo_react2\\\\aprendiendo_react2\\\\src\\\\App\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React from \"react\";\nimport { AppUI } from \"./AppUI\";\n/* const defaultTodos = [\n  {\n    text: 'Cortar Cebolla',\n    completed: true\n  },\n  {\n    text: 'Hacer Curso De React',\n    completed: false\n  },\n  {\n    text: 'Llorar con la Llorona',\n    completed: false\n  }\n] */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const localStorageTodos = localStorage.getItem('TODOS_V1');\n  let parsedTodos;\n\n  if (!localStorageTodos) {\n    localStorage.setItem('TODOS_V1', JSON.stringify([]));\n    parsedTodos = [];\n  } else {\n    parsedTodos = JSON.parse(localStorageTodos);\n  }\n\n  const [todos, setTodos] = React.useState(parsedTodos);\n  const [searchValue, setSearchValue] = React.useState('');\n  const completedTodos = todos.filter(todo => !!todo.completed); //esto filtra los ToDos que ya fueron realizados\n\n  const totalTodos = todos.length;\n  let searchedTodos = [];\n\n  if (!searchValue.length >= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter(todo => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLowerCase(); //aca volvemos todo lo que escribamos en search en minuscula\n\n      return todoText.includes(searchText);\n    });\n  }\n\n  const saveTodos = newTodos => {\n    const stringifiedTodos = JSON.stringify(newTodos); //vuelve como string mi array\n\n    localStorage.setItem('TODOS_V1', stringifiedTodos); //guarda lo anterior en en Todos v1 \n    //queremos que se vea la informacion correcta y evitar que se recargue la paginar ->\n\n    setTodos(newTodos);\n  };\n\n  function completeTodo(text) {\n    const todoIndex = todos.findIndex(todo => todo.text === text); //examinamos cada todo cual indice tiene exactamente el text\n\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true; //agarra el indice correspondiente y le cambia el completed de false a true\n\n    saveTodos(newTodos); //setTodos(newTodos);\n\n    /*      todos[todoIndex] = {\n           text : todos[todoIndex].text,\n           completed: true, */\n  }\n\n  ;\n\n  const deleteTodo = text => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1); //aca agarra el elemento del index elegido, y elimina 1 \n\n    setTodos(newTodos); // saveTodos(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppUI, {\n    totalTodos: totalTodos,\n    completedTodos: completedTodos,\n    searchValue: searchValue,\n    setSearchValue: setSearchValue,\n    searchedTodos: searchedTodos,\n    completeTodo: completeTodo,\n    deleteTodo: deleteTodo\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JqqZeAC4l8FYdoiUYLgUzTkkhNE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/fsbaz/OneDrive/Escritorio/aprendiendo_react2/aprendiendo_react2/src/App/index.js"],"names":["React","AppUI","App","localStorageTodos","localStorage","getItem","parsedTodos","setItem","JSON","stringify","parse","todos","setTodos","useState","searchValue","setSearchValue","completedTodos","filter","todo","completed","totalTodos","length","searchedTodos","todoText","text","toLowerCase","searchText","includes","saveTodos","newTodos","stringifiedTodos","completeTodo","todoIndex","findIndex","deleteTodo","splice"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,SAAtB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAMC,iBAAiB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAA1B;AACA,MAAIC,WAAJ;;AAEA,MAAI,CAACH,iBAAL,EAAwB;AACtBC,IAAAA,YAAY,CAACG,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAe,EAAf,CAAjC;AACAH,IAAAA,WAAW,GAAG,EAAd;AACD,GAHD,MAGM;AACJA,IAAAA,WAAW,GAAGE,IAAI,CAACE,KAAL,CAAWP,iBAAX,CAAd;AACD;;AAED,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBZ,KAAK,CAACa,QAAN,CAAeP,WAAf,CAA1B;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCf,KAAK,CAACa,QAAN,CAAe,EAAf,CAAtC;AAEA,QAAMG,cAAc,GAAGL,KAAK,CAACM,MAAN,CAAaC,IAAI,IAAI,CAAC,CAACA,IAAI,CAACC,SAA5B,CAAvB,CAfa,CAekD;;AAC/D,QAAMC,UAAU,GAAGT,KAAK,CAACU,MAAzB;AAEA,MAAIC,aAAa,GAAG,EAApB;;AAEA,MAAI,CAACR,WAAW,CAACO,MAAb,IAAuB,CAA3B,EAA8B;AAC5BC,IAAAA,aAAa,GAAGX,KAAhB;AACD,GAFD,MAEO;AACLW,IAAAA,aAAa,GAAGX,KAAK,CAACM,MAAN,CAAaC,IAAI,IAAI;AACnC,YAAMK,QAAQ,GAAGL,IAAI,CAACM,IAAL,CAAUC,WAAV,EAAjB;AACA,YAAMC,UAAU,GAAGZ,WAAW,CAACW,WAAZ,EAAnB,CAFmC,CAEW;;AAC9C,aAAOF,QAAQ,CAACI,QAAT,CAAkBD,UAAlB,CAAP;AACC,KAJa,CAAhB;AAKD;;AAED,QAAME,SAAS,GAAIC,QAAD,IAAc;AAC9B,UAAMC,gBAAgB,GAAGtB,IAAI,CAACC,SAAL,CAAeoB,QAAf,CAAzB,CAD8B,CACqB;;AACnDzB,IAAAA,YAAY,CAACG,OAAb,CAAqB,UAArB,EAAiCuB,gBAAjC,EAF8B,CAEqB;AACnD;;AACAlB,IAAAA,QAAQ,CAACiB,QAAD,CAAR;AACD,GALD;;AAMA,WAASE,YAAT,CAAsBP,IAAtB,EAA4B;AAC1B,UAAMQ,SAAS,GAAGrB,KAAK,CAACsB,SAAN,CAAgBf,IAAI,IAAIA,IAAI,CAACM,IAAL,KAAcA,IAAtC,CAAlB,CAD0B,CACqC;;AAC/D,UAAMK,QAAQ,GAAG,CAAC,GAAGlB,KAAJ,CAAjB;AACAkB,IAAAA,QAAQ,CAACG,SAAD,CAAR,CAAoBb,SAApB,GAAgC,IAAhC,CAH0B,CAGY;;AACtCS,IAAAA,SAAS,CAACC,QAAD,CAAT,CAJ0B,CAK1B;;AACJ;AACA;AACA;AACM;;AAAA;;AAGJ,QAAMK,UAAU,GAAIV,IAAD,IAAU;AAC3B,UAAMQ,SAAS,GAAGrB,KAAK,CAACsB,SAAN,CAAgBf,IAAI,IAAIA,IAAI,CAACM,IAAL,KAAcA,IAAtC,CAAlB;AACA,UAAMK,QAAQ,GAAG,CAAC,GAAGlB,KAAJ,CAAjB;AACAkB,IAAAA,QAAQ,CAACM,MAAT,CAAgBH,SAAhB,EAA2B,CAA3B,EAH2B,CAGI;;AAC/BpB,IAAAA,QAAQ,CAACiB,QAAD,CAAR,CAJ2B,CAK5B;AAEA,GAPD;;AAQA,sBACE,QAAC,KAAD;AACA,IAAA,UAAU,EAAET,UADZ;AAEA,IAAA,cAAc,EAAEJ,cAFhB;AAGA,IAAA,WAAW,EAAEF,WAHb;AAIA,IAAA,cAAc,EAAEC,cAJhB;AAKA,IAAA,aAAa,EAAEO,aALf;AAMA,IAAA,YAAY,EAAES,YANd;AAOA,IAAA,UAAU,EAAEG;AAPZ;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GApEQhC,G;;KAAAA,G;AAsET,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React from \"react\";\nimport { AppUI } from \"./AppUI\";\n\n\n/* const defaultTodos = [\n  {\n    text: 'Cortar Cebolla',\n    completed: true\n  },\n  {\n    text: 'Hacer Curso De React',\n    completed: false\n  },\n  {\n    text: 'Llorar con la Llorona',\n    completed: false\n  }\n] */\nfunction App() {\n\n  const localStorageTodos = localStorage.getItem('TODOS_V1');\n  let parsedTodos;\n\n  if (!localStorageTodos) {\n    localStorage.setItem('TODOS_V1', JSON.stringify([]));\n    parsedTodos = [];\n  }else {\n    parsedTodos = JSON.parse(localStorageTodos)\n  }\n  \n  const [todos, setTodos] = React.useState(parsedTodos)\n  const [searchValue, setSearchValue] = React.useState('');\n\n  const completedTodos = todos.filter(todo => !!todo.completed); //esto filtra los ToDos que ya fueron realizados\n  const totalTodos = todos.length;\n\n  let searchedTodos = [];\n\n  if (!searchValue.length >= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter(todo => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLowerCase(); //aca volvemos todo lo que escribamos en search en minuscula\n      return todoText.includes(searchText);  \n      });\n  }\n\n  const saveTodos = (newTodos) => {\n    const stringifiedTodos = JSON.stringify(newTodos); //vuelve como string mi array\n    localStorage.setItem('TODOS_V1', stringifiedTodos);//guarda lo anterior en en Todos v1 \n    //queremos que se vea la informacion correcta y evitar que se recargue la paginar ->\n    setTodos(newTodos);\n  };\n  function completeTodo(text) {\n    const todoIndex = todos.findIndex(todo => todo.text === text); //examinamos cada todo cual indice tiene exactamente el text\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true; //agarra el indice correspondiente y le cambia el completed de false a true\n    saveTodos(newTodos);\n    //setTodos(newTodos);\n/*      todos[todoIndex] = {\n       text : todos[todoIndex].text,\n       completed: true, */\n     };\n  \n\n  const deleteTodo = (text) => {\n    const todoIndex = todos.findIndex(todo => todo.text === text); \n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1); //aca agarra el elemento del index elegido, y elimina 1 \n    setTodos(newTodos);\n   // saveTodos(newTodos);\n\n  }\n  return (\n    <AppUI \n    totalTodos={totalTodos}\n    completedTodos={completedTodos}\n    searchValue={searchValue}\n    setSearchValue={setSearchValue}\n    searchedTodos={searchedTodos}\n    completeTodo={completeTodo}\n    deleteTodo={deleteTodo}\n\n    />\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}